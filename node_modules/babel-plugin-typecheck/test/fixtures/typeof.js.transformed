'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demo;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

var User = function User(input) {
  return input != null && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && typeof input.name === 'string';
};

var user = {
  name: 'bob'
};

if (!User(user)) {
  throw new TypeError('Value of variable "user" violates contract, expected User got ' + (user === null ? 'null' : (typeof user === 'undefined' ? 'undefined' : _typeof(user)) === 'object' && user.constructor ? user.constructor.name || '[Unknown Object]' : typeof user === 'undefined' ? 'undefined' : _typeof(user)));
}

function demo(input) {
  var _input$name;

  if (!User(input)) {
    throw new TypeError('Value of argument "input" violates contract, expected typeof user got ' + (input === null ? 'null' : (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.constructor ? input.constructor.name || '[Unknown Object]' : typeof input === 'undefined' ? 'undefined' : _typeof(input)));
  }

  _input$name = input.name;

  if (typeof _input$name === 'string') {
    return _input$name;
  } else {
    throw new TypeError('Function "demo" return value violates contract, expected string got ' + (_input$name === null ? 'null' : (typeof _input$name === 'undefined' ? 'undefined' : _typeof(_input$name)) === 'object' && _input$name.constructor ? _input$name.constructor.name || '[Unknown Object]' : typeof _input$name === 'undefined' ? 'undefined' : _typeof(_input$name)));
  }
}