'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demo;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var User = function User(name) {
  _classCallCheck(this, User);

  if (!(typeof name === 'string')) {
    throw new TypeError('Value of argument "name" violates contract, expected string got ' + (name === null ? 'null' : (typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object' && name.constructor ? name.constructor.name || '[Unknown Object]' : typeof name === 'undefined' ? 'undefined' : _typeof(name)));
  }

  this.name = name;
};

var user = new User('bob');

function demo(input) {
  var _ref;

  if (!(typeof input === 'string' || typeof input === 'boolean')) {
    throw new TypeError('Value of argument "input" violates contract, expected string | bool got ' + (input === null ? 'null' : (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.constructor ? input.constructor.name || '[Unknown Object]' : typeof input === 'undefined' ? 'undefined' : _typeof(input)));
  }

  _ref = typeof input === 'string' ? create(input) : nope("nope");

  if (_ref instanceof User) {
    return _ref;
  } else {
    throw new TypeError('Function "demo" return value violates contract, expected typeof user got ' + (_ref === null ? 'null' : (typeof _ref === 'undefined' ? 'undefined' : _typeof(_ref)) === 'object' && _ref.constructor ? _ref.constructor.name || '[Unknown Object]' : typeof _ref === 'undefined' ? 'undefined' : _typeof(_ref)));
  }
}

function create(name) {
  if (!(typeof name === 'string')) {
    throw new TypeError('Value of argument "name" violates contract, expected string got ' + (name === null ? 'null' : (typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object' && name.constructor ? name.constructor.name || '[Unknown Object]' : typeof name === 'undefined' ? 'undefined' : _typeof(name)));
  }

  return new User(name);
}

function nope(name) {
  if (!(typeof name === 'string')) {
    throw new TypeError('Value of argument "name" violates contract, expected string got ' + (name === null ? 'null' : (typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object' && name.constructor ? name.constructor.name || '[Unknown Object]' : typeof name === 'undefined' ? 'undefined' : _typeof(name)));
  }

  return name;
}